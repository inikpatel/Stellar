---
# This boolean constraint, when set to True, disables the creation of or update
# to any Google Compute Engine resources involved in IPv6 usage. By default,
# anyone with appropriate Cloud IAM permissions can create or update Google
# Compute Engine resources with IPv6 usage in any projects, folders, and
# organizations. If set, this constraint will have higher priority than other
# IPv6 org constraints including disableVpcInternalIpv6, disableVpcExternalIpv6,
# and disableHybridCloudIpv6.
# COULD HAVE
compute.disableAllIpv6:
  rules:
  - enforce: false

# This boolean constraint, when set to True, disables the creation of or update
# to hybrid cloud resources including Cloud Router, Interconnect Attachments,
# and Cloud VPN with a stack_type of IPV4_IPV6. By default, anyone with
# appropriate Cloud IAM permissions can create or update hybrid cloud resources
# with stack_type of IPV4_IPV6 in any projects, folders and organizations.
# COULD HAVE
compute.disableHybridCloudIpv6:
  rules:
  - enforce: false

# This boolean constraint restricts whether a user can create Internet Network
# Endpoint Groups (NEG) with a type of INTERNET_FQDN_PORT and INTERNET_IP_PORT.
# By default, any user with appropriate IAM permissions can create Internet
# NEGs in any project.
# COULD HAVE
compute.disableInternetNetworkEndpointGroup:
  rules:
  - enforce: false

# This boolean constraint, when set to True, disables the creation of or update
# to subnetworks with a stack_type of IPV4_IPV6 and ipv6_access_type of
# EXTERNAL. By default, anyone with appropriate Cloud IAM permissions can create
# or update subnetworks with stack_type of IPV4_IPV6 in any projects, folders,
# and organizations.
# COULD HAVE
compute.disableVpcExternalIpv6:
  rules:
  - enforce: false

# This boolean constraint, when set to True, disables the creation of or update
# to subnetworks with a stack_type of IPV4_IPV6 and ipv6_access_type of
# INTERNAL. By default, anyone with appropriate Cloud IAM permissions can create
# or update subnetworks with stack_type of IPV4_IPV6 in any projects, folders,
# and organizations.
# COULD HAVE
compute.disableVpcInternalIpv6:
  rules:
  - enforce: false

# This list constraint defines the set of predefined policies that can be
# enforced for VPC Flow logs.By default VPC Flow logs may be configured with
# any settings in each subnet.This constraint enforces enabling flow logs for
# all subnetworks in scope with a required minimum sampling rate. Specify one
# or more of the following valid values:
# [ ESSENTIAL (allows values >= 0.1 and < 0.5),
#   LIGHT (allows values >= 0.5 and < 1.0),
#   COMPREHENSIVE (allows values == 1.0)
# ].
# COULD HAVE
# compute.requireVpcFlowLogs:
#   rules:
#   - allow:
#       values:
#         - ESSENTIAL


# This list constraint defines the type of protocol forwarding rule objects
# with target instance that a user can create. When this constraint is enforced,
# new forwarding rule objects with target instance will be limited to internal
# and/or external IP addresses, based on the types specified. The types to be
# allowed or denied must be listed explicitly. By default, creation of both
# internal and external protocol forwarding rule objects with target instance
# are allowed.
# The list of allowed or denied values can only include values from the list
# below: [INTERNAL, EXTERNAL]. .
# COULD HAVE
compute.restrictProtocolForwardingCreationForTypes:
  rules:
  - allow:
      values:
        - INTERNAL

# This list constraint defines the set of VPC networks that are allowed to be
# peered with the VPC networks belonging to this project, folder, or
# organization. By default, a Network Admin for one network can peer with any
# other network. The allowed/denied list of networks must be identified in the
# form:
#   under:organizations/ORGANIZATION_ID,
#   under:folders/FOLDER_ID,
#   under:projects/PROJECT_ID,
# or projects/PROJECT_ID/global/networks/NETWORK_NAME.
# SHOULD HAVE
# compute.restrictVpcPeering:
#   rules:
#   - allow:
#       values:
#         - under:${root_node}

# This list constraint defines the set of valid IP-v4 addresses that can be
# configured as VPN peer IPs. By default, any IP can be a VPN peer IP for a
# VPC network. The allowed/denied list of IP addresses must be specified as
# valid IP-v4 addresses in the form: IP_V4_ADDRESS.
# SHOULD HAVE
# compute.restrictVpnPeerIPs:
#   rules:
#   - allow:
#       all: true

# This boolean constraint skips the creation of the default network and
# related resources during Google Cloud Platform Project resource creation
# where this constraint is set to True. By default, a default network and
# supporting resources are automatically created when creating a Project resource.
# MUST HAVE
compute.skipDefaultNetworkCreation:
  rules:
  - enforce: true

# This list constraint defines the allowed encryption settings for new VLAN
# Attachments. By default, VLAN Attachments are allowed to use any encryption
# settings. Set IPSEC as the allowed value to enforce creating encrypted VLAN
# attachments only.
# COULD HAVE
# compute.allowedVlanAttachmentEncryption:
#   rules:
#   - allow:
#       values:
#         - IPSEC
