# This file is a template, and might need editing before it works on your project.
# This is a sample GitLab CI/CD configuration file that should run without any modifications.
# It demonstrates a basic 3 stage CI/CD pipeline. Instead of real tests or scripts,
# it uses echo commands to simulate the pipeline execution.
#
# A pipeline is composed of independent jobs that run scripts, grouped into stages.
# Stages run in sequential order, but jobs within stages run in parallel.
#
# For more information, see: https://docs.gitlab.com/ee/ci/yaml/index.html#stages
#
# You can copy and paste this template into a new `.gitlab-ci.yml` file.
# You should not add this template to an existing `.gitlab-ci.yml` file by using the `include:` keyword.
#
# To contribute improvements to CI/CD templates, please follow the Development guide at:
# https://docs.gitlab.com/ee/development/cicd/templates.html
# This specific template is located at:
# https://gitlab.com/gitlab-org/gitlab/-/blob/master/lib/gitlab/ci/templates/Getting-Started.gitlab-ci.yml

stages:          # List of stages for jobs, and their order of execution
  - lint
  - test
  - deploy

stages-aw-formatting:
  stage: lint
  image:
    name: hashicorp/terraform:1.9.2
    entrypoint:
      - '/usr/bin/env'
      - 'PATH=/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin'
  script:
    - cd "fast/stages-aw/"
    - terraform fmt -check --recursive

blueprints-formatting:
  stage: lint
  image:
    name: hashicorp/terraform:1.9.2
    entrypoint:
      - '/usr/bin/env'
      - 'PATH=/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin'
  script:
    - cd "blueprints/il5/"
    - terraform fmt -check --recursive

tflint-stages-aw:
  stage: lint
  image:
    name: ghcr.io/terraform-linters/tflint:v0.52.0
    entrypoint:
      - '/usr/bin/env'
      - 'PATH=/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin'
  script:
    - ./generate-mocks.sh
    - cd fast/stages-aw
    - tflint --recursive

tflint-blueprints:
  stage: lint
  image:
    name: ghcr.io/terraform-linters/tflint:v0.52.0
    entrypoint:
      - '/usr/bin/env'
      - 'PATH=/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin'
  script:
    - cd blueprints/il5/
    - tflint --recursive

validate-stages-aw: 
  stage: test 
  image:
    name: hashicorp/terraform:1.9.2
    entrypoint:
      - '/usr/bin/env'
      - 'PATH=/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin'
  dependencies:
    - tflint-stages-aw
  parallel:
    matrix:
      - STAGES: stages-aw
        STAGE:
         - 0-bootstrap
         - 1-resman
         - 2-networking-c-nva
         - 2-networking-f-ngfw
         - 2-security
         - 3-project-factory
  script:
    - cd "fast/${STAGES}/${STAGE}/"
    - terraform init
    - terraform validate

validate-blueprints:  
  stage: test  
  image:
    name: hashicorp/terraform:1.9.2
    entrypoint:
      - '/usr/bin/env'
      - 'PATH=/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin'
  dependencies:
    - tflint-blueprints
  parallel:
    matrix:
      - BLUEPRINT:
        - bq-project
        - compute-persistent-disk
        - gke-project
        - shielded-vm-project
        - artifact-registry
        - postgresql
        - gcp-ce-security-onion
        - kms-project
        - vpc-peering-project
        - bastion-pattern
        - gcs-project
        - pub-sub-project
        - dataflow
  script:
    - cd "blueprints/il5/${BLUEPRINT}/"
    - terraform init
    - terraform validate

check-docs-stages-aw: 
  stage: test
  image:
    name: python:3.9.19
    entrypoint:
      - '/usr/bin/env'
      - 'PATH=/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin'
  script:
    - cd tools
    - pip install click marko
    - python check_documentation.py fast/stages-aw

check-docs-blueprints:
  stage: test 
  image:
    name: python:3.9.19
    entrypoint:
      - '/usr/bin/env'
      - 'PATH=/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin'
  script:
    - cd tools
    - pip install click marko
    - python check_documentation.py blueprints/il5

checkov-stages-aw:   
  stage: test
  image:
    name: bridgecrew/checkov:3.2.238
    entrypoint:
      - '/usr/bin/env'
      - 'PATH=/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin'
  script:
    - cd fast/stages-aw
    - checkov -d .
  allow_failure: true

checkov-blueprints:   
  stage: test
  image:
    name: bridgecrew/checkov:3.2.238
    entrypoint:
      - '/usr/bin/env'
      - 'PATH=/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin'
  script:
    - cd blueprints/il5
    - checkov -d .
  allow_failure: true
